apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: artds
  labels:
    app.kubernetes.io/name: &name artds
    app.kubernetes.io/instance: &instance 389ds
    app.kubernetes.io/version: &version v3.1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *instance
      app.kubernetes.io/version: *version
  serviceName: artds-headless
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *instance
        app.kubernetes.io/version: *version
    spec:
      initContainers:
      - name: init-container
        image: busybox:1.37.0
        command: ["sh", "-c"]
        args:
          - |
            NUM=$(echo $POD_NAME | cut -f2 -d'-')
            if [ $NUM -gt 1 ]; then
              echo "number of replicas must be 1 or 2"
              exit 1
            fi
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          # Метка генерируется автоматически. Может не работать в ранних версиях кубера. 
          # - name: POD_INDEX
          #   valueFrom:
          #     fieldRef:
          #       apiVersion: v1
          #       fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
      containers:
        - name: dirsrv
          image: 389ds/dirsrv:3.1
          env:
            ## Use suffix as a basedn in `dsrc` file
            - name: DS_SUFFIX_NAME
              value: "dc=system,dc=local"
            ## DS_ERRORLOG_LEVEL - set the log level for `ns-slapd`, default is 266354688
            # - name: DS_ERRORLOG_LEVEL
            #   value: "8192"
            ## DS_MEMORY_PERCENTAGE - set LDBM autotune percentage (`nsslapd-cache-autosize`), default is 25
            #- name: DS_MEMORY_PERCENTAGE
            #  value: "10"
            ## DS_REINDEX` - run database reindex task (`db2index`)
            - name: DS_REINDEX
              value: "True"
            ## DS_STARTUP_TIMEOUT - set container startup timeout in seconds, default is 60 seconds.
            # - name: DS_STARTUP_TIMEOUT
            #   value: "120"
          envFrom:
            - secretRef:
                name: artds
          ports:
            - name: ldap-tcp
              containerPort: 3389
              protocol: TCP
            - name: ldaps-tcp
              containerPort: 3636
              protocol: TCP
          # securityContext:
          #   runAsUser: 389
          #   runAsGroup: 389
          resources:
            requests:
              cpu: "1"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "512Mi"
          livenessProbe:
            exec:
              command:
              - /usr/lib/dirsrv/dscontainer
              - -H
            initialDelaySeconds: 15
          readinessProbe:
            exec:
              command:
              - /usr/lib/dirsrv/dscontainer
              - -H
            initialDelaySeconds: 15
          volumeMounts:
            - name: ds-data
              mountPath: /data
            - name: dirsrv-tls
              mountPath: '/data/tls/'
              readOnly: true
            - name: dirsrv-tls-ca
              mountPath: '/data/tls/ca'
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: ds389-config
        - name: dirsrv-tls
          secret:
            secretName: artds-tls
            items:
            - key: tls.key
              path: server.key
            - key: tls.crt
              path: server.crt
        - name: dirsrv-tls-ca
          secret:
            secretName: artds-tls
            items:
            - key: ca.crt
              path: ca.crt
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - *name
            topologyKey: "kubernetes.io/hostname"
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/version
                operator: In
                values:
                - *version
            topologyKey: "kubernetes.io/hostname"
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - *instance
            topologyKey: "kubernetes.io/hostname"
  volumeClaimTemplates:
  - metadata:
      name: ds-data
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *instance
        app.kubernetes.io/version: *version
    spec:
      accessModes: 
        - "ReadWriteOnce"
      storageClassName: managed-nfs-storage   
      resources:
        requests:
          storage: 1Gi
